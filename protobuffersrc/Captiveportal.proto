syntax = "proto3";
package captiveportal;
option go_package = "github.com/untangle/golang-shared/structs/protocolbuffers/CaptivePortal";

// Captive portal condition
message CpRuleCondition {
  string Op = 1 [json_name = "op"];
  string Type = 2 [json_name = "type"];
  string Value = 3 [json_name = "value"];
}
// Captive portal action enum
enum CpRulesAction {
  DISABLE = 0;
  ENABLE = 1;
}
// Captive portal rule
message CpRules {
  string RuleId = 1 [json_name = "rule_id"];
  bool Enabled = 2 [json_name = "enabled"];
  string Description = 3 [json_name = "description"];
  repeated CpRuleCondition Conditions = 4 [json_name = "conditions"];
  CpRulesAction Action = 5 [json_name = "action"];
}

message ImageDetails {
  string imageData = 1 [json_name = "imageData"];
  string imageName = 2 [json_name = "imageName"];
}

message CpSettingType {
  bool Enabled = 1 [json_name = "enabled"];
  int32 TimeoutValue = 2 [json_name = "timeoutValue"];
  string TimeoutPeriod = 3 [json_name = "timeoutPeriod"];
  string AcceptText = 4 [json_name = "acceptText"];
  string AcceptButtonText = 5 [json_name = "acceptButtonText"];
  string MessageHeading = 6 [json_name = "messageHeading"];
  string MessageText = 7 [json_name = "messageText"];
  string WelcomeText = 8 [json_name = "welcomeText"];
  string PageTitle = 9 [json_name = "pageTitle"];
  ImageDetails logo = 10 [json_name = "logo"];
  repeated CpRules Rules = 11 [json_name = "rules"];
}

service CaptivePortalGrpcService {
  rpc getCaptivePortalUser (UserGetRequest) returns (UserGetResponse) {}
  rpc setCaptivePortalUser (UserSetRequest) returns (UserSetResponse) {}
}

message UserGetRequest {
  string ClientIp = 1;
}

// Get user info to redirect to respective captive portal.
message UserGetResponse {
  string ClientIp = 1;
  string PolicyId = 2;
  string ConfigId = 3;
  CpSettingType PolicyConfig = 4;
}

message UserSetRequest {
  string ClientIp = 1;
}

// Update captive portal t&c accepted status.
message UserSetResponse {
  bool Done = 1;
}

message CpUserEntry {
  string PolicyId = 1;
  string ConfigId = 2;
  CpSettingType PolicyConfig = 3;
  int64 TimeoutDuration = 4;
  int64 LastAcceptedTimeStamp = 5;
  int64 LastSeenTimeStamp = 6;
  string Description = 7;
  string Host = 8;
}
// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1-devel
// 	protoc        v3.6.1
// source: Discovery.proto

package Discoverd

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type DiscoveryMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DiscoveryList []*DiscoveryEntry `protobuf:"bytes,1,rep,name=discoveryList,proto3" json:"discoveryList,omitempty"`
}

func (x *DiscoveryMessage) Reset() {
	*x = DiscoveryMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Discovery_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DiscoveryMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DiscoveryMessage) ProtoMessage() {}

func (x *DiscoveryMessage) ProtoReflect() protoreflect.Message {
	mi := &file_Discovery_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DiscoveryMessage.ProtoReflect.Descriptor instead.
func (*DiscoveryMessage) Descriptor() ([]byte, []int) {
	return file_Discovery_proto_rawDescGZIP(), []int{0}
}

func (x *DiscoveryMessage) GetDiscoveryList() []*DiscoveryEntry {
	if x != nil {
		return x.DiscoveryList
	}
	return nil
}

type DiscoveryEntry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MacAddress  string `protobuf:"bytes,1,opt,name=macAddress,proto3" json:"macAddress,omitempty"`
	IPv4Address string `protobuf:"bytes,2,opt,name=IPv4Address,proto3" json:"IPv4Address,omitempty"`
	Lldp        *LLDP  `protobuf:"bytes,3,opt,name=lldp,proto3" json:"lldp,omitempty"`
	Arp         *ARP   `protobuf:"bytes,4,opt,name=arp,proto3" json:"arp,omitempty"`
	Nmap        *NMAP  `protobuf:"bytes,5,opt,name=nmap,proto3" json:"nmap,omitempty"`
}

func (x *DiscoveryEntry) Reset() {
	*x = DiscoveryEntry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Discovery_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DiscoveryEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DiscoveryEntry) ProtoMessage() {}

func (x *DiscoveryEntry) ProtoReflect() protoreflect.Message {
	mi := &file_Discovery_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DiscoveryEntry.ProtoReflect.Descriptor instead.
func (*DiscoveryEntry) Descriptor() ([]byte, []int) {
	return file_Discovery_proto_rawDescGZIP(), []int{1}
}

func (x *DiscoveryEntry) GetMacAddress() string {
	if x != nil {
		return x.MacAddress
	}
	return ""
}

func (x *DiscoveryEntry) GetIPv4Address() string {
	if x != nil {
		return x.IPv4Address
	}
	return ""
}

func (x *DiscoveryEntry) GetLldp() *LLDP {
	if x != nil {
		return x.Lldp
	}
	return nil
}

func (x *DiscoveryEntry) GetArp() *ARP {
	if x != nil {
		return x.Arp
	}
	return nil
}

func (x *DiscoveryEntry) GetNmap() *NMAP {
	if x != nil {
		return x.Nmap
	}
	return nil
}

type LLDP struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Chassis
	MacAddress              string              `protobuf:"bytes,1,opt,name=macAddress,proto3" json:"macAddress,omitempty"`
	IP                      string              `protobuf:"bytes,2,opt,name=IP,proto3" json:"IP,omitempty"`
	LldpSysName             string              `protobuf:"bytes,3,opt,name=lldpSysName,proto3" json:"lldpSysName,omitempty"`
	LldpSysDesc             string              `protobuf:"bytes,4,opt,name=lldpSysDesc,proto3" json:"lldpSysDesc,omitempty"`
	LldpChassisCapabilities []*LLDPCapabilities `protobuf:"bytes,5,rep,name=lldpChassisCapabilities,proto3" json:"lldpChassisCapabilities,omitempty"`
	// LLDP-MED
	LldpDeviceType      string              `protobuf:"bytes,6,opt,name=lldpDeviceType,proto3" json:"lldpDeviceType,omitempty"`
	LldpMedCapabilities []*LLDPCapabilities `protobuf:"bytes,7,rep,name=lldpMedCapabilities,proto3" json:"lldpMedCapabilities,omitempty"`
	// LLDP-MED-DEVICE
	LldpInventoryHWRev    string `protobuf:"bytes,8,opt,name=lldpInventoryHWRev,proto3" json:"lldpInventoryHWRev,omitempty"`
	LldpInventorySoftRev  string `protobuf:"bytes,9,opt,name=lldpInventorySoftRev,proto3" json:"lldpInventorySoftRev,omitempty"`
	LldpInventorySerial   string `protobuf:"bytes,10,opt,name=lldpInventorySerial,proto3" json:"lldpInventorySerial,omitempty"`
	LldpInventoryAssetTag string `protobuf:"bytes,11,opt,name=lldpInventoryAssetTag,proto3" json:"lldpInventoryAssetTag,omitempty"`
	LldpInventoryModel    string `protobuf:"bytes,12,opt,name=lldpInventoryModel,proto3" json:"lldpInventoryModel,omitempty"`
	LldpInventoryVendor   string `protobuf:"bytes,13,opt,name=lldpInventoryVendor,proto3" json:"lldpInventoryVendor,omitempty"`
}

func (x *LLDP) Reset() {
	*x = LLDP{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Discovery_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LLDP) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LLDP) ProtoMessage() {}

func (x *LLDP) ProtoReflect() protoreflect.Message {
	mi := &file_Discovery_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LLDP.ProtoReflect.Descriptor instead.
func (*LLDP) Descriptor() ([]byte, []int) {
	return file_Discovery_proto_rawDescGZIP(), []int{2}
}

func (x *LLDP) GetMacAddress() string {
	if x != nil {
		return x.MacAddress
	}
	return ""
}

func (x *LLDP) GetIP() string {
	if x != nil {
		return x.IP
	}
	return ""
}

func (x *LLDP) GetLldpSysName() string {
	if x != nil {
		return x.LldpSysName
	}
	return ""
}

func (x *LLDP) GetLldpSysDesc() string {
	if x != nil {
		return x.LldpSysDesc
	}
	return ""
}

func (x *LLDP) GetLldpChassisCapabilities() []*LLDPCapabilities {
	if x != nil {
		return x.LldpChassisCapabilities
	}
	return nil
}

func (x *LLDP) GetLldpDeviceType() string {
	if x != nil {
		return x.LldpDeviceType
	}
	return ""
}

func (x *LLDP) GetLldpMedCapabilities() []*LLDPCapabilities {
	if x != nil {
		return x.LldpMedCapabilities
	}
	return nil
}

func (x *LLDP) GetLldpInventoryHWRev() string {
	if x != nil {
		return x.LldpInventoryHWRev
	}
	return ""
}

func (x *LLDP) GetLldpInventorySoftRev() string {
	if x != nil {
		return x.LldpInventorySoftRev
	}
	return ""
}

func (x *LLDP) GetLldpInventorySerial() string {
	if x != nil {
		return x.LldpInventorySerial
	}
	return ""
}

func (x *LLDP) GetLldpInventoryAssetTag() string {
	if x != nil {
		return x.LldpInventoryAssetTag
	}
	return ""
}

func (x *LLDP) GetLldpInventoryModel() string {
	if x != nil {
		return x.LldpInventoryModel
	}
	return ""
}

func (x *LLDP) GetLldpInventoryVendor() string {
	if x != nil {
		return x.LldpInventoryVendor
	}
	return ""
}

type LLDPCapabilities struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Capability string `protobuf:"bytes,1,opt,name=capability,proto3" json:"capability,omitempty"`
	Enabled    bool   `protobuf:"varint,2,opt,name=enabled,proto3" json:"enabled,omitempty"`
}

func (x *LLDPCapabilities) Reset() {
	*x = LLDPCapabilities{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Discovery_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LLDPCapabilities) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LLDPCapabilities) ProtoMessage() {}

func (x *LLDPCapabilities) ProtoReflect() protoreflect.Message {
	mi := &file_Discovery_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LLDPCapabilities.ProtoReflect.Descriptor instead.
func (*LLDPCapabilities) Descriptor() ([]byte, []int) {
	return file_Discovery_proto_rawDescGZIP(), []int{3}
}

func (x *LLDPCapabilities) GetCapability() string {
	if x != nil {
		return x.Capability
	}
	return ""
}

func (x *LLDPCapabilities) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

type ARP struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ip  string `protobuf:"bytes,1,opt,name=ip,proto3" json:"ip,omitempty"`
	Mac string `protobuf:"bytes,2,opt,name=mac,proto3" json:"mac,omitempty"`
}

func (x *ARP) Reset() {
	*x = ARP{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Discovery_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ARP) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ARP) ProtoMessage() {}

func (x *ARP) ProtoReflect() protoreflect.Message {
	mi := &file_Discovery_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ARP.ProtoReflect.Descriptor instead.
func (*ARP) Descriptor() ([]byte, []int) {
	return file_Discovery_proto_rawDescGZIP(), []int{4}
}

func (x *ARP) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *ARP) GetMac() string {
	if x != nil {
		return x.Mac
	}
	return ""
}

type NMAP struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OpenPorts []*NMAPPorts `protobuf:"bytes,1,rep,name=openPorts,proto3" json:"openPorts,omitempty"`
}

func (x *NMAP) Reset() {
	*x = NMAP{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Discovery_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NMAP) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NMAP) ProtoMessage() {}

func (x *NMAP) ProtoReflect() protoreflect.Message {
	mi := &file_Discovery_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NMAP.ProtoReflect.Descriptor instead.
func (*NMAP) Descriptor() ([]byte, []int) {
	return file_Discovery_proto_rawDescGZIP(), []int{5}
}

func (x *NMAP) GetOpenPorts() []*NMAPPorts {
	if x != nil {
		return x.OpenPorts
	}
	return nil
}

type NMAPPorts struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Port     int32  `protobuf:"varint,1,opt,name=port,proto3" json:"port,omitempty"`
	Protocol string `protobuf:"bytes,2,opt,name=protocol,proto3" json:"protocol,omitempty"`
}

func (x *NMAPPorts) Reset() {
	*x = NMAPPorts{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Discovery_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NMAPPorts) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NMAPPorts) ProtoMessage() {}

func (x *NMAPPorts) ProtoReflect() protoreflect.Message {
	mi := &file_Discovery_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NMAPPorts.ProtoReflect.Descriptor instead.
func (*NMAPPorts) Descriptor() ([]byte, []int) {
	return file_Discovery_proto_rawDescGZIP(), []int{6}
}

func (x *NMAPPorts) GetPort() int32 {
	if x != nil {
		return x.Port
	}
	return 0
}

func (x *NMAPPorts) GetProtocol() string {
	if x != nil {
		return x.Protocol
	}
	return ""
}

var File_Discovery_proto protoreflect.FileDescriptor

var file_Discovery_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x09, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x64, 0x22, 0x53, 0x0a, 0x10,
	0x44, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x12, 0x3f, 0x0a, 0x0d, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x4c, 0x69, 0x73,
	0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x76,
	0x65, 0x72, 0x64, 0x2e, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x52, 0x0d, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x4c, 0x69, 0x73,
	0x74, 0x22, 0xbe, 0x01, 0x0a, 0x0e, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x1e, 0x0a, 0x0a, 0x6d, 0x61, 0x63, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6d, 0x61, 0x63, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x49, 0x50, 0x76, 0x34, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x49, 0x50, 0x76, 0x34, 0x41,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x23, 0x0a, 0x04, 0x6c, 0x6c, 0x64, 0x70, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x64,
	0x2e, 0x4c, 0x4c, 0x44, 0x50, 0x52, 0x04, 0x6c, 0x6c, 0x64, 0x70, 0x12, 0x20, 0x0a, 0x03, 0x61,
	0x72, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f,
	0x76, 0x65, 0x72, 0x64, 0x2e, 0x41, 0x52, 0x50, 0x52, 0x03, 0x61, 0x72, 0x70, 0x12, 0x23, 0x0a,
	0x04, 0x6e, 0x6d, 0x61, 0x70, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x64, 0x69,
	0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x64, 0x2e, 0x4e, 0x4d, 0x41, 0x50, 0x52, 0x04, 0x6e, 0x6d,
	0x61, 0x70, 0x22, 0xf6, 0x04, 0x0a, 0x04, 0x4c, 0x4c, 0x44, 0x50, 0x12, 0x1e, 0x0a, 0x0a, 0x6d,
	0x61, 0x63, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x6d, 0x61, 0x63, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x49,
	0x50, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x50, 0x12, 0x20, 0x0a, 0x0b, 0x6c,
	0x6c, 0x64, 0x70, 0x53, 0x79, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x6c, 0x6c, 0x64, 0x70, 0x53, 0x79, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a,
	0x0b, 0x6c, 0x6c, 0x64, 0x70, 0x53, 0x79, 0x73, 0x44, 0x65, 0x73, 0x63, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x6c, 0x6c, 0x64, 0x70, 0x53, 0x79, 0x73, 0x44, 0x65, 0x73, 0x63, 0x12,
	0x55, 0x0a, 0x17, 0x6c, 0x6c, 0x64, 0x70, 0x43, 0x68, 0x61, 0x73, 0x73, 0x69, 0x73, 0x43, 0x61,
	0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1b, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x64, 0x2e, 0x4c, 0x4c, 0x44,
	0x50, 0x43, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x52, 0x17, 0x6c,
	0x6c, 0x64, 0x70, 0x43, 0x68, 0x61, 0x73, 0x73, 0x69, 0x73, 0x43, 0x61, 0x70, 0x61, 0x62, 0x69,
	0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x12, 0x26, 0x0a, 0x0e, 0x6c, 0x6c, 0x64, 0x70, 0x44, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e,
	0x6c, 0x6c, 0x64, 0x70, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x4d,
	0x0a, 0x13, 0x6c, 0x6c, 0x64, 0x70, 0x4d, 0x65, 0x64, 0x43, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c,
	0x69, 0x74, 0x69, 0x65, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x64, 0x69,
	0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x64, 0x2e, 0x4c, 0x4c, 0x44, 0x50, 0x43, 0x61, 0x70, 0x61,
	0x62, 0x69, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x52, 0x13, 0x6c, 0x6c, 0x64, 0x70, 0x4d, 0x65,
	0x64, 0x43, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x12, 0x2e, 0x0a,
	0x12, 0x6c, 0x6c, 0x64, 0x70, 0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x48, 0x57,
	0x52, 0x65, 0x76, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x6c, 0x6c, 0x64, 0x70, 0x49,
	0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x48, 0x57, 0x52, 0x65, 0x76, 0x12, 0x32, 0x0a,
	0x14, 0x6c, 0x6c, 0x64, 0x70, 0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x53, 0x6f,
	0x66, 0x74, 0x52, 0x65, 0x76, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x6c, 0x6c, 0x64,
	0x70, 0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x53, 0x6f, 0x66, 0x74, 0x52, 0x65,
	0x76, 0x12, 0x30, 0x0a, 0x13, 0x6c, 0x6c, 0x64, 0x70, 0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f,
	0x72, 0x79, 0x53, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13,
	0x6c, 0x6c, 0x64, 0x70, 0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x53, 0x65, 0x72,
	0x69, 0x61, 0x6c, 0x12, 0x34, 0x0a, 0x15, 0x6c, 0x6c, 0x64, 0x70, 0x49, 0x6e, 0x76, 0x65, 0x6e,
	0x74, 0x6f, 0x72, 0x79, 0x41, 0x73, 0x73, 0x65, 0x74, 0x54, 0x61, 0x67, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x15, 0x6c, 0x6c, 0x64, 0x70, 0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72,
	0x79, 0x41, 0x73, 0x73, 0x65, 0x74, 0x54, 0x61, 0x67, 0x12, 0x2e, 0x0a, 0x12, 0x6c, 0x6c, 0x64,
	0x70, 0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x6c, 0x6c, 0x64, 0x70, 0x49, 0x6e, 0x76, 0x65, 0x6e,
	0x74, 0x6f, 0x72, 0x79, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x12, 0x30, 0x0a, 0x13, 0x6c, 0x6c, 0x64,
	0x70, 0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x56, 0x65, 0x6e, 0x64, 0x6f, 0x72,
	0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x6c, 0x6c, 0x64, 0x70, 0x49, 0x6e, 0x76, 0x65,
	0x6e, 0x74, 0x6f, 0x72, 0x79, 0x56, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x22, 0x4c, 0x0a, 0x10, 0x4c,
	0x4c, 0x44, 0x50, 0x43, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x12,
	0x1e, 0x0a, 0x0a, 0x63, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x12,
	0x18, 0x0a, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x22, 0x27, 0x0a, 0x03, 0x41, 0x52, 0x50,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x70,
	0x12, 0x10, 0x0a, 0x03, 0x6d, 0x61, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d,
	0x61, 0x63, 0x22, 0x3a, 0x0a, 0x04, 0x4e, 0x4d, 0x41, 0x50, 0x12, 0x32, 0x0a, 0x09, 0x6f, 0x70,
	0x65, 0x6e, 0x50, 0x6f, 0x72, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e,
	0x64, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x64, 0x2e, 0x4e, 0x4d, 0x41, 0x50, 0x50, 0x6f,
	0x72, 0x74, 0x73, 0x52, 0x09, 0x6f, 0x70, 0x65, 0x6e, 0x50, 0x6f, 0x72, 0x74, 0x73, 0x22, 0x3b,
	0x0a, 0x09, 0x4e, 0x4d, 0x41, 0x50, 0x50, 0x6f, 0x72, 0x74, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x70,
	0x6f, 0x72, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x12,
	0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x42, 0x45, 0x5a, 0x43, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x75, 0x6e, 0x74, 0x61, 0x6e, 0x67,
	0x6c, 0x65, 0x2f, 0x67, 0x6f, 0x6c, 0x61, 0x6e, 0x67, 0x2d, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64,
	0x2f, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x73, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f,
	0x6c, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72, 0x73, 0x2f, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65,
	0x72, 0x64, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_Discovery_proto_rawDescOnce sync.Once
	file_Discovery_proto_rawDescData = file_Discovery_proto_rawDesc
)

func file_Discovery_proto_rawDescGZIP() []byte {
	file_Discovery_proto_rawDescOnce.Do(func() {
		file_Discovery_proto_rawDescData = protoimpl.X.CompressGZIP(file_Discovery_proto_rawDescData)
	})
	return file_Discovery_proto_rawDescData
}

var file_Discovery_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_Discovery_proto_goTypes = []interface{}{
	(*DiscoveryMessage)(nil), // 0: discoverd.DiscoveryMessage
	(*DiscoveryEntry)(nil),   // 1: discoverd.DiscoveryEntry
	(*LLDP)(nil),             // 2: discoverd.LLDP
	(*LLDPCapabilities)(nil), // 3: discoverd.LLDPCapabilities
	(*ARP)(nil),              // 4: discoverd.ARP
	(*NMAP)(nil),             // 5: discoverd.NMAP
	(*NMAPPorts)(nil),        // 6: discoverd.NMAPPorts
}
var file_Discovery_proto_depIdxs = []int32{
	1, // 0: discoverd.DiscoveryMessage.discoveryList:type_name -> discoverd.DiscoveryEntry
	2, // 1: discoverd.DiscoveryEntry.lldp:type_name -> discoverd.LLDP
	4, // 2: discoverd.DiscoveryEntry.arp:type_name -> discoverd.ARP
	5, // 3: discoverd.DiscoveryEntry.nmap:type_name -> discoverd.NMAP
	3, // 4: discoverd.LLDP.lldpChassisCapabilities:type_name -> discoverd.LLDPCapabilities
	3, // 5: discoverd.LLDP.lldpMedCapabilities:type_name -> discoverd.LLDPCapabilities
	6, // 6: discoverd.NMAP.openPorts:type_name -> discoverd.NMAPPorts
	7, // [7:7] is the sub-list for method output_type
	7, // [7:7] is the sub-list for method input_type
	7, // [7:7] is the sub-list for extension type_name
	7, // [7:7] is the sub-list for extension extendee
	0, // [0:7] is the sub-list for field type_name
}

func init() { file_Discovery_proto_init() }
func file_Discovery_proto_init() {
	if File_Discovery_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_Discovery_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DiscoveryMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Discovery_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DiscoveryEntry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Discovery_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LLDP); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Discovery_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LLDPCapabilities); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Discovery_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ARP); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Discovery_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NMAP); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Discovery_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NMAPPorts); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_Discovery_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_Discovery_proto_goTypes,
		DependencyIndexes: file_Discovery_proto_depIdxs,
		MessageInfos:      file_Discovery_proto_msgTypes,
	}.Build()
	File_Discovery_proto = out.File
	file_Discovery_proto_rawDesc = nil
	file_Discovery_proto_goTypes = nil
	file_Discovery_proto_depIdxs = nil
}
